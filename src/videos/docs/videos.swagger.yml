paths:
  /hometask_01/api/videos:
    get:
      summary: Returns all videos
      tags: [ Videos ]
      responses:
        200:
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/h01.Video'
            application/json:
              schema:
                $ref: '#/components/schemas/h01.Video'
            text/json:
              schema:
                $ref: '#/components/schemas/h01.Video'
    post:
      summary: Create new video
      tags: [ Videos ]
      requestBody:
        description: Data for constructing new video entity
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/h01.CreateVideoInputModel'
          text/json:
            schema:
              $ref: '#/components/schemas/h01.CreateVideoInputModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/h01.CreateVideoInputModel'
      responses:
        201:
          description: Returns the newly created video
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/h01.Video'
            application/json:
              schema:
                $ref: '#/components/schemas/h01.Video'
            text/json:
              schema:
                $ref: '#/components/schemas/h01.Video'
        400:
          description: If the inputModel has incorrect values
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/APIErrorResult'
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResult'
            text/json:
              schema:
                $ref: '#/components/schemas/APIErrorResult'
  /hometask_01/api/videos/{id}:
    get:
      summary: Returns video by id
      tags: [ Videos ]
      parameters:
        - name: id
          in: path
          description: Id of existing video
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/h01.Video'
            application/json:
              schema:
                $ref: '#/components/schemas/h01.Video'
            text/json:
              schema:
                $ref: '#/components/schemas/h01.Video'
        404:
          description: "If video for passed id doesn't exist"
    put:
      summary: Update existing video by id with InputModel
      tags: [ Videos ]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Data for updating
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/h01.UpdateVideoInputModel'
          text/json:
            schema:
              $ref: '#/components/schemas/h01.UpdateVideoInputModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/h01.UpdateVideoInputModel'
      responses:
        204:
          description: "No Content"
        400:
          description: If the inputModel has incorrect values
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/APIErrorResult'
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResult'
            text/json:
              schema:
                $ref: '#/components/schemas/APIErrorResult'
        404:
          description: "Not Found"        
    delete:
      summary: Delete video specified by id
      tags: [ Videos ]
      parameters:
        - name: id
          in: path
          description: Video id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        204:
          description: "No Content"
        404:
          description: "Not Found"  

components:
  schemas:
    APIErrorResult:
      type: object
      properties:
        errorsMessages:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/FieldError'
    FieldError:
      type: object
      properties:
        message:
          type: string
          nullable: true
          description: "Message with error explanation for certain field"
        field:
          type: string
          nullable: true
          description: "What field/property of input model has error"
    h01.CreateVideoInputModel:
      type: object
      required:
        - title
        - author
        - availableResolutions
      properties:
        title:
          type: string
          maxLength: 40
        author:
          type: string
          maxLength: 20
        availableResolutions:
          type: array
          description: "At least one resolution should be added"
          items:
            $ref: '#/components/schemas/h01.Resolutions'
    h01.Resolutions:
      type: string
      enum:
        - P144
        - P240
        - P360
        - P480
        - P720
        - P1080
        - P1440
        - P2160
    h01.UpdateVideoInputModel:
      type: object
      required:
        - title
        - author
        - availableResolutions
        - canBeDownloaded
        - minAgeRestriction
        - publicationDate
      properties:
        title:
          type: string
          maxLength: 40
        author:
          type: string
          maxLength: 20
        availableResolutions:
          type: array
          description: "At least one resolution should be added"
          items:
            $ref: '#/components/schemas/h01.Resolutions'
        canBeDownloaded:
          type: boolean
        minAgeRestriction:
          type: integer
          format: int32
          maximum: 18
          minimum: 1
          description: "null - no restriction"
        publicationDate:
          type: string
          format: date-time
    h01.Video:
      type: object
      required:
        - id
        - title
        - author
        - canBeDownloaded
        - minAgeRestriction
        - createdAt
        - publicationDate
        - availableResolutions
      properties:
        id:
          type: integer
          format: int32
        title:
          type: string
        author:
          type: string
        canBeDownloaded:
          type: boolean
          description: "By default - false"
        minAgeRestriction:
          type: integer
          format: int32
          maximum: 18
          minimum: 1
          default: null
          description: "null - no restriction"
        createdAt:
          type: string
          format: date-time
        publicationDate:
          type: string
          format: date-time
          description: "By default - +1 day from CreatedAt"
        availableResolutions:
          type: array
          items:
            $ref: '#/components/schemas/h01.Resolutions'
